#!/bin/sh

cd "$(dirname "$(readlink -f "$(command -v "$0")")")"
if [ -d "venv/" ] && [ ! "x$(command -v python)" == "x$VIRTUAL_ENV/bin/python" ]; then
	source ./venv/bin/activate
	echo "Using virtualenv"
fi

# any compiled file whatsoever

find . -type f \( \
	-name '*.py[cod]' -o -name '*.slo' -o -name '*.lo' -o -name '*.o' \
	-o -name '*.so' -o -name '*.dylib' -o -name '*.lai' -o -name '*.la' \
	-o -name '*.a' \) \
	-not -path "./venv/*" \
	-not -path "./build/*" \
	-not -path "./enet/*" \
	-not -path "./feature_server/scripts/*" | xargs rm -f

# cython autogenerated

rm -f pyspades/bytes.cpp
rm -f pyspades/common.cpp
rm -f pyspades/contained.cpp
rm -f pyspades/loaders.cpp
rm -f pyspades/mapmaker.cpp
rm -f pyspades/packet.cpp
rm -f pyspades/vxl.cpp
rm -f pyspades/world.cpp
rm -f enet/enet.c

# native binaries directories

rm -rf build/
rm -rf enet/build/

python2 build.py build_ext -f --inplace
cd enet
python2 setup.py build_ext -f --inplace
